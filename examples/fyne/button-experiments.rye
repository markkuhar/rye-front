
; A) code where we separately define widgets (***)

rye .needs { fyne }

lab: fyne-label "I am a label."
btn: fyne-button "Click" { lab .set-text "Button was clicked!" }
box: fyne-container(2) 'vbox lab btn

with fyne-app .new-window "Button Demo" {
	.set-content box ,
	.show-and-run
}

; B) code where we define everything inline (*)

rye .needs { fyne }

with fyne-app .new-window "Button Demo" {
	.set-content fyne-container(2) 
	lab: fyne-label "I am a label."
	fyne-button "Click" { lab .set-text "Button was clicked!" } ,
	.show-and-run
}

; C) inline code if we make [ ] evaluated blocks (**) 

rye .needs { fyne }

with fyne-app .new-window "Button Demo" {
	.set-content fyne-container [
		lab: fyne-label "I am a label."
		fyne-button "Click" { lab .set-text "Button was clicked!" }
	] ,
	.show-and-run
}

; D) inline code but window is constructed separately (**)

rye .needs { fyne }

win: new-window fyne-app "Button Demo"

win .set-content fyne-container [
	lab: fyne-label "I am a label."
	fyne-button "Click" { lab .set-text "Button was clicked!" }
]
win	.show-and-run













; E) if fyne constructors are defined in it's own context

rye .needs { fyne }

win: new-window fyne/app "Button Demo"

win .set-content fyne/container [
	lab: fyne/label "I am a label."
	fyne/button "Click" { lab .set-text "Button was clicked!" }
]
win	.show-and-run

; F) same, fyne is in context but we execute code inside context

rye .needs { fyne }

do\in fyne {
	
	win: window app "Button Demo"
	
	win .content! container [
		label "I am a label." :lab
		button "Click" { lab .set-text "Button was clicked!" }
	]
	win	.show-and-run

}

; G) same but widgets separately defined and without evaluated blocks 

rye .needs { fyne }

do\in fyne { 
	lab: label "I am a label."
	btn: button "Click" { lab .set-text "Button was clicked!" }
	box: container(2) 'vbox lab btn
	
	with app .window "Button Demo" {
		.set-content box ,
		.show-and-run
	}
}

; since we don't have builtin contexts yet, we construct one here so G works

fyne: context { app: ?fyne-app label: ?fyne-label button: ?fyne-button container: ?fyne-container }






















